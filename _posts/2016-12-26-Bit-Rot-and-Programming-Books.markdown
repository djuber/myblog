---
layout: post
date: 2016-12-26 23:03 -0500
title: Bit Rot and Programming Books
categories: 
---

Ruby is a cool language. There are a lot of dynamic changes happening in the gem universe. It's also nice that a fair number of books have been written recently (last ten years) about it. However, following along in even recent books is difficult if you don't fix the versions of the gems they used. For example, I've been trying to follow along with 'Continuous Testing with Rspec and Rails' from Pragmatic, but almost every line of code has required some finagling. First I needed to get rspec-autotest, since autotest/zentest and rspec move at different speeds. While autotest itself does work, rspec requires an added gem to glue the two together, or test discovery fails. Second, the version of simplecov generated by the jeweller tool uses one version of json, while other gems (notably the autotest binary handled by rvm and not the one handled by bundler) use a different version. Third, rspec seems to have moved very strongly in the direction of expectations, while earlier versions used an SUnit-esque should syntax. Basically all the tests described in the book are getting rewritten as I go to make the expect syntax uniform throughout. Fourth, the twitter api used in the first sample application has been completely revamped (you need an access token to use the api, which requires a developer key with twitter, which now requires a mobile phone on your account and an sms authentication). Additionally, the Twitter::Search class has been removed, replaced by a Twitter::REST::Client.search method, and most of the arel chaining methods like ':per_page' or :from have been replaced, the call looks more like ```client.search("from: #{username}", {:result_type => :recent}).take(5)``` instead of the listed ```Twitter::Search.new.per_page(5).from(@twitter_username)```.